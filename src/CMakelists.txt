# Set the include directories
set(INCLUDES ../inc)

# Set the source files
set(SOURCES 
    HwMonitor.cpp
    logger.cpp
    main.cpp
    MqttClient.cpp
    Scheduler.cpp
    SysMonitor.cpp
)

# Add the executable target
add_executable(${PROJECT_NAME} ${SOURCES})

# Include the specified include directories
target_include_directories(${PROJECT_NAME} PRIVATE ${INCLUDES})

# Set compiler flags for Debug and Release builds
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g3 -Wall -fmessage-length=0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall -fmessage-length=0")

# Find the Mosquitto library
find_package(PkgConfig REQUIRED)
pkg_check_modules(MOSQUITTO REQUIRED libmosquitto)

# Include the Mosquitto headers
include_directories(${MOSQUITTO_INCLUDE_DIRS})

# Link the Mosquitto library to the executable
target_link_libraries(${PROJECT_NAME} ${MOSQUITTO_LIBRARIES})

# Add compile definitions for Release build
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_definitions(${PROJECT_NAME} PRIVATE 
    USE_SYSLOG
    )
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_definitions(${PROJECT_NAME} PRIVATE 
    USE_SYSLOG 
    USE_STDOUT
    )
endif()

# Print the build type
message("====================================================")
message(STATUS "[INFO] Build type: ${CMAKE_BUILD_TYPE}")
# Print all used target definitions:
get_target_property(TARGET_COMPILE_DEFINITIONS ${PROJECT_NAME} COMPILE_DEFINITIONS)
message(STATUS "[INFO] Target compile definitions: ${TARGET_COMPILE_DEFINITIONS}")
message("====================================================")